<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.edumate.boot.domain.member.model.mapper.MemberMapper">
	<!-- Find -->
	<select id="selectByMemberId">
		SELECT * FROM MEMBER
			WHERE MEMBER_ID = #{memberId}
	</select>

	<!-- Login -->
	<select id="loginMember">
		SELECT	*	FROM MEMBER
			WHERE 	MEMBER_ID = #{memberId}
			AND		MEMBER_PW = #{memberPw}
	</select>

	<!-- Signup -->
	<insert id="insertMember">
		INSERT INTO MEMBER 		(	MEMBER_ID,		MEMBER_PW,		MEMBER_EMAIL,	MEMBER_NAME,	MEMBER_BIRTH,	TEACHER_YN,		ADMIN_YN,	MEMBER_MONEY	)
					VALUES		(	#{memberId},	#{memberPw},	#{memberEmail},	#{memberName},	#{memberBirth},	DEFAULT,		DEFAULT,	DEFAULT	)
	</insert>
	
	<select id="findMemberId">
        SELECT MEMBER_ID
        FROM MEMBER
        WHERE MEMBER_NAME = #{memberName}
        AND MEMBER_BIRTH = #{memberBirth}
        AND MEMBER_EMAIL = #{memberEmail}
    </select>
    
    <select id="checkMemberForPwReset">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE MEMBER_ID = #{memberId}
        AND MEMBER_EMAIL = #{memberEmail}
    </select>
    
    <update id="updateMemberPw">
    UPDATE MEMBER
    SET MEMBER_PW = #{memberPw}
    WHERE MEMBER_ID = #{memberId}
	</update>


	<insert id="insertQuestion">
		INSERT INTO QUESTION (
		QUESTION_NO,
		MEMBER_ID,
		QUESTION_TITLE,
		QUESTION_CONTENT,
		WRITE_DATE
		) VALUES (
		SEQ_QUESTION_NO.NEXTVAL,
		#{memberId, jdbcType=VARCHAR},
		#{questionTitle, jdbcType=VARCHAR},
		#{questionContent, jdbcType=VARCHAR},
		DEFAULT
		)
	</insert>

	<select id="selectRequestList" resultType="Request">
	    SELECT * FROM REQUEST 
	    <where>
	        AND REQUEST_YN = 'Y' 
	        
	        <if test="filter != null and filter != 'ALL'">
	            AND REQUEST_STATUS = #{filter, jdbcType=VARCHAR}
	        </if>
	        
	        <if test="searchKeyword != null and searchKeyword != ''">
			    AND (
			        UPPER(REQUEST_TITLE) LIKE '%' || #{searchKeyword} || '%'
			        OR UPPER(REQUEST_CONTENT) LIKE '%' || #{searchKeyword} || '%'
			    )
			</if>
	        
	        <if test='adminYN != null and adminYN == "N"'> 
	            AND MEMBER_ID = #{memberId, jdbcType=VARCHAR} 
	        </if>
	    </where>
	    ORDER BY REQUEST_NO DESC
	</select>
	
	<select id="getRequestTotalCount" resultType="_int">
	    SELECT COUNT(*) FROM REQUEST
	    <where>
	        <if test="filter != null and filter != 'ALL'">
	            AND REQUEST_STATUS = #{filter, jdbcType=VARCHAR}
	        </if>
	        
	        <if test="searchKeyword != null and searchKeyword != ''">
	            AND (
	                REPLACE(UPPER(REQUEST_TITLE), ' ', '') LIKE '%'||REPLACE(#{searchKeyword}, ' ', '')||'%'
	                OR REPLACE(UPPER(REQUEST_CONTENT), ' ', '') LIKE '%'||REPLACE(#{searchKeyword}, ' ', '')||'%'
	            )
	        </if>
	        
	        AND REQUEST_YN = 'Y'
	        
	        <if test='adminYN != null and adminYN == "N"'> 
	            AND MEMBER_ID = #{memberId, jdbcType=VARCHAR} 
	        </if>
	    </where>
	</select>
	<insert id="insertRequest">
		INSERT INTO REQUEST (
		REQUEST_NO,
		MEMBER_ID,
		REQUEST_TITLE,
		REQUEST_CONTENT,
		WRITE_DATE
		) VALUES (
		SEQ_REQUEST_NO.NEXTVAL,
		#{memberId, jdbcType=VARCHAR},
		#{requestTitle, jdbcType=VARCHAR},
		#{requestContent, jdbcType=VARCHAR},
		DEFAULT
		)
	</insert>
	<select id="selectOneByNo" resultType="com.edumate.boot.domain.member.model.vo.Request">
		SELECT * FROM REQUEST WHERE REQUEST_NO = #{requestNo}
	</select>
	<select id="selectPrevRequestNo" resultType="_int">
	    SELECT MAX(REQUEST_NO) 
	    FROM REQUEST
	    WHERE REQUEST_NO <![CDATA[<]]> #{currentRequestNo}
	    AND REQUEST_YN = 'Y' <if test='adminYN != null and adminYN == "N"'> 
	        AND MEMBER_ID = #{memberId, jdbcType=VARCHAR} 
	    </if>
	</select>
	
	<select id="selectNextRequestNo" resultType="_int">
	    SELECT MIN(REQUEST_NO) 
	    FROM REQUEST
	    WHERE REQUEST_NO <![CDATA[>]]> #{currentRequestNo}
	    AND REQUEST_YN = 'Y' <if test='adminYN != null and adminYN == "N"'> 
	        AND MEMBER_ID = #{memberId, jdbcType=VARCHAR} 
	    </if>
	</select>
	
	<update id="changeRequestStatus">
		UPDATE REQUEST 
	    SET REQUEST_STATUS = 
	        CASE 
	            WHEN REQUEST_STATUS = 'Y' THEN 'N'  WHEN REQUEST_STATUS = 'N' THEN 'Y'  ELSE REQUEST_STATUS END
	    WHERE REQUEST_NO = #{requestNo}
	</update>
	<update id="deleteRequest">
		UPDATE REQUEST SET REQUEST_YN = 'N' WHERE REQUEST_NO = #{requestNo}
	</update>
		<update id="updateRequest" parameterType="Request">
	    UPDATE REQUEST 
	    SET 
	        REQUEST_TITLE = #{requestTitle, jdbcType=VARCHAR},  REQUEST_CONTENT = #{requestContent, jdbcType=VARCHAR} 
	    WHERE 
	        REQUEST_NO = #{requestNo}
	</update>

    <select id="getCount" resultType="int">
        SELECT COUNT(*) FROM REQUEST
    </select>

    <select id="findLectureById" resultType="LectureNoRequest">
        SELECT LECTURE_NO FROM PURCHASE
        WHERE MEMBER_ID = #{memberId}
        ORDER BY LECTURE_NO ASC
    </select>

    <update id="updateMemberInfo">
        UPDATE MEMBER 
        SET 
            MEMBER_PW = #{memberPw},
            MEMBER_NAME = #{memberName},
            MEMBER_EMAIL = #{memberEmail},
            MEMBER_BIRTH = #{memberBirth}
        WHERE MEMBER_ID = #{memberId}
    </update>

    <select id="getMemberStats" resultType="com.edumate.boot.app.member.dto.MemberStatsRequest">
        SELECT 
            (SELECT COUNT(*) FROM REQUEST WHERE MEMBER_ID = #{memberId} AND REQUEST_YN = 'Y') AS requestCount,
            (SELECT COUNT(*) FROM REQUEST_COMMENT WHERE MEMBER_ID = #{memberId} AND REQUEST_COMMENT_YN = 'Y') AS requestCommentCount,
            (SELECT COUNT(*) FROM QUESTION WHERE MEMBER_ID = #{memberId} AND QUESTION_YN = 'Y') AS questionCount,
            (SELECT COUNT(*) FROM QUESTION_COMMENT WHERE MEMBER_ID = #{memberId} AND QUESTION_COMMENT_YN = 'Y') AS questionCommentCount
        FROM DUAL
    </select>

    <select id="getMyPosts" resultType="com.edumate.boot.app.member.dto.MyPostRequest">
        SELECT 
            REQUEST_NO AS postNo,
            'REQUEST' AS postType,
            REQUEST_TITLE AS postTitle,
            REQUEST_CONTENT AS postContent,
            WRITE_DATE AS writeDate,
            MEMBER_ID AS memberId,
            REQUEST_STATUS AS status
        FROM REQUEST 
        WHERE MEMBER_ID = #{memberId} AND REQUEST_YN = 'Y'
        
        UNION ALL
        
        SELECT 
            QUESTION_NO AS postNo,
            'QUESTION' AS postType,
            QUESTION_TITLE AS postTitle,
            QUESTION_CONTENT AS postContent,
            WRITE_DATE AS writeDate,
            MEMBER_ID AS memberId,
            QUESTION_STATUS AS status
        FROM QUESTION 
        WHERE MEMBER_ID = #{memberId} AND QUESTION_YN = 'Y'
        
        ORDER BY writeDate DESC
    </select>
    
    <select id="getMyPostsWithSearch" resultType="com.edumate.boot.app.member.dto.MyPostRequest">
        SELECT 
            REQUEST_NO AS postNo,
            'REQUEST' AS postType,
            REQUEST_TITLE AS postTitle,
            REQUEST_CONTENT AS postContent,
            WRITE_DATE AS writeDate,
            MEMBER_ID AS memberId,
            REQUEST_STATUS AS status
        FROM REQUEST 
        WHERE MEMBER_ID = #{memberId} AND REQUEST_YN = 'Y'
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (
                UPPER(REQUEST_TITLE) LIKE '%' || #{searchKeyword} || '%'
                OR UPPER(REQUEST_CONTENT) LIKE '%' || #{searchKeyword} || '%'
            )
        </if>
        
        UNION ALL
        
        SELECT 
            QUESTION_NO AS postNo,
            'QUESTION' AS postType,
            QUESTION_TITLE AS postTitle,
            QUESTION_CONTENT AS postContent,
            WRITE_DATE AS writeDate,
            MEMBER_ID AS memberId,
            QUESTION_STATUS AS status
        FROM QUESTION 
        WHERE MEMBER_ID = #{memberId} AND QUESTION_YN = 'Y'
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (
                UPPER(QUESTION_TITLE) LIKE '%' || #{searchKeyword} || '%'
                OR UPPER(QUESTION_CONTENT) LIKE '%' || #{searchKeyword} || '%'
            )
        </if>
        
        ORDER BY writeDate DESC
    </select>
    
    <select id="getMyPostsTotalCount" resultType="_int">
        SELECT COUNT(*) FROM (
            SELECT REQUEST_NO
            FROM REQUEST 
            WHERE MEMBER_ID = #{memberId} AND REQUEST_YN = 'Y'
            <if test="searchKeyword != null and searchKeyword != ''">
                AND (
                    UPPER(REQUEST_TITLE) LIKE '%' || #{searchKeyword} || '%'
                    OR UPPER(REQUEST_CONTENT) LIKE '%' || #{searchKeyword} || '%'
                )
            </if>
            
            UNION ALL
            
            SELECT QUESTION_NO
            FROM QUESTION 
            WHERE MEMBER_ID = #{memberId} AND QUESTION_YN = 'Y'
            <if test="searchKeyword != null and searchKeyword != ''">
                AND (
                    UPPER(QUESTION_TITLE) LIKE '%' || #{searchKeyword} || '%'
                    OR UPPER(QUESTION_CONTENT) LIKE '%' || #{searchKeyword} || '%'
                )
            </if>
        ) total_posts
    </select>
    
    <select id="getMyComments" resultType="com.edumate.boot.app.member.dto.MyCommentRequest">
        SELECT 
            CAST(rc.REQUEST_COMMENT_NO AS NUMBER) AS commentNo,
            CAST('REQUEST' AS VARCHAR2(20)) AS commentType,
            CAST(rc.REQUEST_COMMENT_CONTENT AS VARCHAR2(4000)) AS commentContent,
            rc.WRITE_DATE AS writeDate,
            CAST(rc.MEMBER_ID AS VARCHAR2(50)) AS memberId,
            CAST(rc.REQUEST_COMMENT_YN AS VARCHAR2(10)) AS status,
            CAST(r.REQUEST_NO AS NUMBER) AS parentPostNo,
            CAST(r.REQUEST_TITLE AS VARCHAR2(4000)) AS parentPostTitle,
            CAST('REQUEST' AS VARCHAR2(20)) AS parentPostType
        FROM REQUEST_COMMENT rc
        JOIN REQUEST r ON rc.REQUEST_NO = r.REQUEST_NO
        WHERE rc.MEMBER_ID = #{memberId} AND rc.REQUEST_COMMENT_YN = 'Y'
        
        UNION ALL
        
        SELECT 
            CAST(qc.QUESTION_COMMENT_NO AS NUMBER) AS commentNo,
            CAST('QUESTION' AS VARCHAR2(20)) AS commentType,
            CAST(qc.QUESTION_COMMENT_CONTENT AS VARCHAR2(4000)) AS commentContent,
            qc.WRITE_DATE AS writeDate,
            CAST(qc.MEMBER_ID AS VARCHAR2(50)) AS memberId,
            CAST(qc.QUESTION_COMMENT_YN AS VARCHAR2(10)) AS status,
            CAST(q.QUESTION_NO AS NUMBER) AS parentPostNo,
            CAST(q.QUESTION_TITLE AS VARCHAR2(4000)) AS parentPostTitle,
            CAST('QUESTION' AS VARCHAR2(20)) AS parentPostType
        FROM QUESTION_COMMENT qc
        JOIN QUESTION q ON qc.QUESTION_NO = q.QUESTION_NO
        WHERE qc.MEMBER_ID = #{memberId} AND qc.QUESTION_COMMENT_YN = 'Y'
        
        ORDER BY writeDate DESC
    </select>
    
    <select id="getMyCommentsWithSearch" resultType="com.edumate.boot.app.member.dto.MyCommentRequest">
        SELECT 
            CAST(rc.REQUEST_COMMENT_NO AS NUMBER) AS commentNo,
            CAST('REQUEST' AS VARCHAR2(20)) AS commentType,
            CAST(rc.REQUEST_COMMENT_CONTENT AS VARCHAR2(4000)) AS commentContent,
            rc.WRITE_DATE AS writeDate,
            CAST(rc.MEMBER_ID AS VARCHAR2(50)) AS memberId,
            CAST(rc.REQUEST_COMMENT_YN AS VARCHAR2(10)) AS status,
            CAST(r.REQUEST_NO AS NUMBER) AS parentPostNo,
            CAST(r.REQUEST_TITLE AS VARCHAR2(4000)) AS parentPostTitle,
            CAST('REQUEST' AS VARCHAR2(20)) AS parentPostType
        FROM REQUEST_COMMENT rc
        JOIN REQUEST r ON rc.REQUEST_NO = r.REQUEST_NO
        WHERE rc.MEMBER_ID = #{memberId} AND rc.REQUEST_COMMENT_YN = 'Y'
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (
                UPPER(rc.REQUEST_COMMENT_CONTENT) LIKE '%' || #{searchKeyword} || '%'
                OR UPPER(r.REQUEST_TITLE) LIKE '%' || #{searchKeyword} || '%'
            )
        </if>
        
        UNION ALL
        
        SELECT 
            CAST(qc.QUESTION_COMMENT_NO AS NUMBER) AS commentNo,
            CAST('QUESTION' AS VARCHAR2(20)) AS commentType,
            CAST(qc.QUESTION_COMMENT_CONTENT AS VARCHAR2(4000)) AS commentContent,
            qc.WRITE_DATE AS writeDate,
            CAST(qc.MEMBER_ID AS VARCHAR2(50)) AS memberId,
            CAST(qc.QUESTION_COMMENT_YN AS VARCHAR2(10)) AS status,
            CAST(q.QUESTION_NO AS NUMBER) AS parentPostNo,
            CAST(q.QUESTION_TITLE AS VARCHAR2(4000)) AS parentPostTitle,
            CAST('QUESTION' AS VARCHAR2(20)) AS parentPostType
        FROM QUESTION_COMMENT qc
        JOIN QUESTION q ON qc.QUESTION_NO = q.QUESTION_NO
        WHERE qc.MEMBER_ID = #{memberId} AND qc.QUESTION_COMMENT_YN = 'Y'
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (
                UPPER(qc.QUESTION_COMMENT_CONTENT) LIKE '%' || #{searchKeyword} || '%'
                OR UPPER(q.QUESTION_TITLE) LIKE '%' || #{searchKeyword} || '%'
            )
        </if>
        
        ORDER BY writeDate DESC
    </select>
    
    <select id="getMyCommentsTotalCount" resultType="_int">
        SELECT COUNT(*) FROM (
            SELECT rc.REQUEST_COMMENT_NO
            FROM REQUEST_COMMENT rc
            JOIN REQUEST r ON rc.REQUEST_NO = r.REQUEST_NO
            WHERE rc.MEMBER_ID = #{memberId} AND rc.REQUEST_COMMENT_YN = 'Y'
            <if test="searchKeyword != null and searchKeyword != ''">
                AND (
                    UPPER(rc.REQUEST_COMMENT_CONTENT) LIKE '%' || #{searchKeyword} || '%'
                    OR UPPER(r.REQUEST_TITLE) LIKE '%' || #{searchKeyword} || '%'
                )
            </if>
            
            UNION ALL
            
            SELECT qc.QUESTION_COMMENT_NO
            FROM QUESTION_COMMENT qc
            JOIN QUESTION q ON qc.QUESTION_NO = q.QUESTION_NO
            WHERE qc.MEMBER_ID = #{memberId} AND qc.QUESTION_COMMENT_YN = 'Y'
            <if test="searchKeyword != null and searchKeyword != ''">
                AND (
                    UPPER(qc.QUESTION_COMMENT_CONTENT) LIKE '%' || #{searchKeyword} || '%'
                    OR UPPER(q.QUESTION_TITLE) LIKE '%' || #{searchKeyword} || '%'
                )
            </if>
        ) total_comments
    </select>
</mapper>