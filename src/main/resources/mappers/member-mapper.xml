<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.edumate.boot.domain.member.model.mapper.MemberMapper">
	<!-- Find -->
	<select id="selectByMemberId">
		SELECT * FROM MEMBER
			WHERE MEMBER_ID = #{memberId}
	</select>

	<!-- Login -->
	<select id="loginMember">
		SELECT	*	FROM MEMBER
			WHERE 	MEMBER_ID = #{memberId}
			AND		MEMBER_PW = #{memberPw}
	</select>

	<!-- Signup -->
	<insert id="insertMember">
		INSERT INTO MEMBER 		(	MEMBER_ID,		MEMBER_PW,		MEMBER_EMAIL,	MEMBER_NAME,	MEMBER_BIRTH,	TEACHER_YN,		ADMIN_YN,	MEMBER_MONEY	)
					VALUES		(	#{memberId},	#{memberPw},	#{memberEmail},	#{memberName},	#{memberBirth},	DEFAULT,		DEFAULT,	DEFAULT	)
	</insert>
	
	<select id="findMemberId">
        SELECT MEMBER_ID
        FROM MEMBER
        WHERE MEMBER_NAME = #{memberName}
        AND MEMBER_BIRTH = #{memberBirth}
        AND MEMBER_EMAIL = #{memberEmail}
    </select>
    
    <select id="checkMemberForPwReset">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE MEMBER_ID = #{memberId}
        AND MEMBER_EMAIL = #{memberEmail}
    </select>
    
    <update id="updateMemberPw">
    UPDATE MEMBER
    SET MEMBER_PW = #{memberPw}
    WHERE MEMBER_ID = #{memberId}
	</update>


	<insert id="insertQuestion">
		INSERT INTO QUESTION (
		QUESTION_NO,
		MEMBER_ID,
		QUESTION_TITLE,
		QUESTION_CONTENT,
		WRITE_DATE
		) VALUES (
		SEQ_QUESTION_NO.NEXTVAL,
		#{memberId, jdbcType=VARCHAR},
		#{questionTitle, jdbcType=VARCHAR},
		#{questionContent, jdbcType=VARCHAR},
		DEFAULT
		)
	</insert>

	<select id="selectRequestList" resultType="Request">
	    SELECT * FROM REQUEST 
	    <where>
	        AND REQUEST_YN = 'Y' 
	        
	        <if test="filter != null and filter != 'ALL'">
	            AND REQUEST_STATUS = #{filter, jdbcType=VARCHAR}
	        </if>
	        
	        <if test="searchKeyword != null and searchKeyword != ''">
			    AND (
			        UPPER(REQUEST_TITLE) LIKE '%' || #{searchKeyword} || '%'
			        OR UPPER(REQUEST_CONTENT) LIKE '%' || #{searchKeyword} || '%'
			    )
			</if>
	        
	        <if test='adminYN != null and adminYN == "N"'> 
	            AND MEMBER_ID = #{memberId, jdbcType=VARCHAR} 
	        </if>
	    </where>
	    ORDER BY REQUEST_NO DESC
	</select>
	
	<select id="getRequestTotalCount" resultType="_int">
	    SELECT COUNT(*) FROM REQUEST
	    <where>
	        <if test="filter != null and filter != 'ALL'">
	            AND REQUEST_STATUS = #{filter, jdbcType=VARCHAR}
	        </if>
	        
	        <if test="searchKeyword != null and searchKeyword != ''">
	            AND (
	                REPLACE(UPPER(REQUEST_TITLE), ' ', '') LIKE '%'||REPLACE(#{searchKeyword}, ' ', '')||'%'
	                OR REPLACE(UPPER(REQUEST_CONTENT), ' ', '') LIKE '%'||REPLACE(#{searchKeyword}, ' ', '')||'%'
	            )
	        </if>
	        
	        AND REQUEST_YN = 'Y'
	        
	        <if test='adminYN != null and adminYN == "N"'> 
	            AND MEMBER_ID = #{memberId, jdbcType=VARCHAR} 
	        </if>
	    </where>
	</select>
	<insert id="insertRequest">
		INSERT INTO REQUEST (
		REQUEST_NO,
		MEMBER_ID,
		REQUEST_TITLE,
		REQUEST_CONTENT,
		WRITE_DATE
		) VALUES (
		SEQ_REQUEST_NO.NEXTVAL,
		#{memberId, jdbcType=VARCHAR},
		#{requestTitle, jdbcType=VARCHAR},
		#{requestContent, jdbcType=VARCHAR},
		DEFAULT
		)
	</insert>
	<select id="selectOneByNo" resultType="com.edumate.boot.domain.member.model.vo.Request">
		SELECT * FROM REQUEST WHERE REQUEST_NO = #{requestNo}
	</select>
	<select id="selectPrevRequestNo" resultType="_int">
	    SELECT MAX(REQUEST_NO) 
	    FROM REQUEST
	    WHERE REQUEST_NO <![CDATA[<]]> #{currentRequestNo}
	    AND REQUEST_YN = 'Y' <if test='adminYN != null and adminYN == "N"'> 
	        AND MEMBER_ID = #{memberId, jdbcType=VARCHAR} 
	    </if>
	</select>
	
	<select id="selectNextRequestNo" resultType="_int">
	    SELECT MIN(REQUEST_NO) 
	    FROM REQUEST
	    WHERE REQUEST_NO <![CDATA[>]]> #{currentRequestNo}
	    AND REQUEST_YN = 'Y' <if test='adminYN != null and adminYN == "N"'> 
	        AND MEMBER_ID = #{memberId, jdbcType=VARCHAR} 
	    </if>
	</select>
	
	<update id="changeRequestStatus">
		UPDATE REQUEST 
	    SET REQUEST_STATUS = 
	        CASE 
	            WHEN REQUEST_STATUS = 'Y' THEN 'N'  WHEN REQUEST_STATUS = 'N' THEN 'Y'  ELSE REQUEST_STATUS END
	    WHERE REQUEST_NO = #{requestNo}
	</update>
	<update id="deleteRequest">
		UPDATE REQUEST SET REQUEST_YN = 'N' WHERE REQUEST_NO = #{requestNo}
	</update>
		<update id="updateRequest" parameterType="Request">
	    UPDATE REQUEST 
	    SET 
	        REQUEST_TITLE = #{requestTitle, jdbcType=VARCHAR},  REQUEST_CONTENT = #{requestContent, jdbcType=VARCHAR} 
	    WHERE 
	        REQUEST_NO = #{requestNo}
	</update>

    <select id="getCount" resultType="int">
        SELECT COUNT(*) FROM REQUEST
    </select>
    
    <select id="checkEmailDuplication" resultType="_int">
        SELECT COUNT(*) FROM MEMBER WHERE MEMBER_EMAIL = #{memberEamil}
    </select>
</mapper>